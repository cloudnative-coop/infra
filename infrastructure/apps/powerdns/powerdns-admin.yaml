---
apiVersion: v1
kind: Service
metadata:
  name: admin
  namespace: powerdns
spec:
  type: ClusterIP
  # loadBalancerIP: 192.168.1.155
  ports:
    - name: "powerdns-admin"
      port: 80
      targetPort: 80
  selector:
    powerdns: admin
# status:
#   loadBalancer: {}
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: powerdns-admin-data
#   labels:
#     powerdns: admin
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin
  namespace: powerdns
spec:
  replicas: 1
  selector:
    matchLabels:
      powerdns: admin
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        powerdns: admin
    spec:
      initContainers:
        # As root, let's chown the data folder correctly
        # FIXME There is likely a cleaner way
        - name: data
          image: powerdnsadmin/pda-legacy:v0.3.0
          command: ["sh", "-c", "chown -R pda:pda /data"]
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          volumeMounts:
            - mountPath: /data
              name: powerdns-admin
      restartPolicy: Always
      containers:
          image: powerdnsadmin/pda-legacy:v0.3.0
          name: admin
          ports:
            - containerPort: 80
          envFrom:
            - configMapRef:
                name: powerdns-config
            - secretRef:
                name: powerdns-config
            - secretRef:
                name: powerdns-override
                optional: true
          livenessProbe:
            exec:
              command: ["/bin/sh", "-c", "nc -vz 127.0.0.1 80 2>/dev/null"]
            initialDelaySeconds: 80
          volumeMounts:
            - mountPath: /data
              name: powerdns-admin
            - mountPath: /app/pdns-poststart.py
              name: powerdns-config
              subPath: pdns-poststart.py
            # - mountPath: /saml.crt
            #   name: powerdns-secrets
            #   subPath: authentik_cert
          resources: {}
          # # FIXME: Better approach to dns-poststart
          # lifecycle:
          #   postStart:
          #     exec:
          #       command:
          #         - "sh"
          #         - "-c"
          #         - "cd /app && /usr/bin/python3 pdns-poststart.py"
      volumes:
        - name: powerdns-config
          defaultMode: 0755
          configMap:
            name: jinja-templates
        # - name: powerdns-config
        #   configMap:
        #     name: jinja-templates
        - name: powerdns-admin
          persistentVolumeClaim:
            claimName: powerdns-admin
        - name: powerdns-secrets
          secret:
            secretName: powerdns-config
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: powerdns
  namespace: powerdns
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-http01"
spec:
  ingressClassName: nginx
  tls:
    - secretName: "powerdns-tls"
      hosts:
        - "${PDNS_ADMIN_INGRESS}"
  rules:
    - host: "${PDNS_ADMIN_INGRESS}"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: admin
                port:
                  number: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: powerdns-admin
  namespace: powerdns
spec:
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
